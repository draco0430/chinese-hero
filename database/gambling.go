package database

import (
	"database/sql"
	"fmt"

	gorp "gopkg.in/gorp.v1"
)

var (
	GamblingItems = make(map[int]*Gambling)
	rewardCounts  = map[int64]uint{17502658: 30, 17502527: 50, 17502659: 60, 17502528: 100, 17502529: 150, 17502530: 200, 17200188: 10, 17200189: 30,
		17501007: 10, 17502516: 50, 17502517: 75, 17502518: 100, 17501008: 10, 17502513: 50, 17502514: 75, 17502515: 100, 17502555: 600, 17502557: 600,
		13370142: 100, 13370143: 100, 13370144: 100, 13370145: 100}
	rewardCounts2 = map[int64]map[int64]uint{
		13370000: {221: 2, 222: 2, 223: 2},
		13370001: {232: 2, 233: 2, 234: 2},
		13370002: {253: 2, 18500094: 1, 17100004: 5, 17100005: 5},
		13370003: {92000012: 2, 92000013: 2, 17200187: 3, 18500095: 25, 18500077: 100, 18500078: 100, 18500079: 100, 18500080: 100, 13000080: 60},
		13370004: {18500077: 100, 18500078: 100, 18500079: 100, 18500080: 100, 18500095: 50, 18500106: 600},
		13370005: {17502294: 2000, 17300103: 2000, 17300006: 500},
		99009119: {100080002: 10, 17502476: 60},
		15710366: {15710362: 600, 15710363: 600, 15710364: 600, 15710365: 600},
		16210009: {13000059: 120, 13000058: 120, 16210013: 720, 13000021: 120, 17300123: 180, 13000109: 120, 13000056: 180, 17502969: 120, 13000062: 120, 13000061: 120, 17503041: 120, 15710564: 120, 18500108: 120},
		18500229: {17502306: 8},
		18500346: {17300032: 500, 15710016: 500, 15710103: 500, 15710269: 500, 15710273: 500, 17300006: 500, 17300004: 500},
		18500416: {18500412: 700},
		18500417: {18500414: 120, 18500415: 60, 15710628: 60, 18500413: 180},
		18500427: {18500423: 10},
		18500458: {18500459: 1440, 18500460: 2880, 18500461: 5760},
		18500492: {17200187: 50, 18500423: 200},
		18500493: {18500423: 100, 17200187: 10},
		99002480: {99002478: 10},
		18500738: {17502294: 500, 17300103: 500, 17300006: 200},
		18500863: {221: 50},
		18500864: {222: 50},
		18500865: {223: 50},
		18500866: {17500023: 20},
		18500867: {99009121: 20},
		92000011: {100080008: 5},
		18500884: {30864: 10080},
		13370141: {100031050: 120, 17500009: 120, 17500008: 120, 13000002: 120, 13000003: 120, 13000007: 120, 13000008: 120},
	}
)

type Gambling struct {
	ID     int    `db:"id"`
	Cost   uint64 `db:"cost"`
	DropID int    `db:"drop_id"`
}

func (e *Gambling) Create() error {
	return db.Insert(e)
}

func (e *Gambling) CreateWithTransaction(tr *gorp.Transaction) error {
	return tr.Insert(e)
}

func (e *Gambling) Delete() error {
	_, err := db.Delete(e)
	return err
}

func getGamblingItems() error {
	var gamblings []*Gambling
	query := `select * from data.gambling`

	if _, err := db.Select(&gamblings, query); err != nil {
		if err == sql.ErrNoRows {
			return nil
		}
		return fmt.Errorf("getGamblingItems: %s", err.Error())
	}

	for _, g := range gamblings {
		GamblingItems[g.ID] = g
	}

	return nil
}
